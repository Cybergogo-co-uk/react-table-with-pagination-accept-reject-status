const path = require('path')
const fs = require('fs')
const util = require('util')
const chalk = require('chalk')
const axios = require('axios')

const { validateListingInfo } = require('./utils/publishing')
const { migrate } = require('./utils/migrate')

const readFile = util.promisify(fs.readFile)

const update = async (args, opts) => {
  let marketplaceURL = 'https://component-registry.herokuapp.com'

  if (opts.local) {
    marketplaceURL =
      process.env.MARKETPLACE_URL ||
      process.env.REGISTRY_URL ||
      'http://localhost:8000'
  }

  const url = `${marketplaceURL}/api/libraries`
  let listingInfo
  let pkg

  console.clear()
  console.log('')
  console.log(chalk.bold('  Adalo Marketplace, Update Listing'))
  console.log('')
  console.log(chalk.bold('  Validating your listing...'))
  console.log('')

  try {
    const listingInfoPath = path.join(process.cwd(), 'adalo.json')

    if (!fs.existsSync(listingInfoPath)) {
      console.log(
        chalk.bold.yellow(
          '  New adalo.json does not exist, converting your project to use the new adalo.json...'
        )
      )
      console.log('')
      await migrate()
    }

    listingInfo = JSON.parse(await readFile(listingInfoPath))
    const packagePath = path.join(process.cwd(), 'package.json')
    pkg = JSON.parse(await readFile(packagePath))
  } catch (e) {
    console.log(chalk.red('No adalo.json found'))
    process.exit(1)
  }

  try {
    await validateListingInfo(listingInfo, opts)

    const logoBase64 = `${await readFile(
      path.join(process.cwd(), listingInfo.logo),
      { encoding: 'base64' }
    )}`

    const demoAppId =
      listingInfo.demoAppURL &&
      listingInfo.demoAppURL.match(
        /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/g
      )[0]

    const supportURL = listingInfo.supportURL

    const components = JSON.stringify(listingInfo.components.map((c) => c.name))

    console.log(chalk.bold('  Updating your listing...'))

    const price = listingInfo.price * 100

    await axios.put(url, {
      ...listingInfo,
      logo: logoBase64,
      name: pkg.name,
      demoAppId,
      supportURL,
      price,
      components,
    })

    console.log('')
    console.log(chalk.green('  Listing updated successfully!'))
    console.log('')
    process.exit(0)
  } catch (error) {
    console.error('')
    console.error(chalk.bold.red('  Oh no, something went wrong:'))
    console.error('')
    if (error.response && error.response.data) {
      console.error(`  - ${error.response.data.message}`)
    } else if (error.request && error.request.data) {
      console.error(`  - ${error.request.data.message}`)
    } else {
      console.error(`  - ${error}`)
    }
    console.error('')
    console.error(
      chalk.bold(
        `  For assistance updating your listing please visit ${chalk.italic.blue(
          'https://developers.adalo.com'
        )}`
      )
    )
    console.error('')

    process.exit(1)
  }
}

module.exports = update
