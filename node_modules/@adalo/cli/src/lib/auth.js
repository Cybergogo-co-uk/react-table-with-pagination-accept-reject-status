const path = require('path')
const os = require('os')
const fs = require('fs')
const axios = require('axios')
const chalk = require('chalk')

const { marketplaceURL } = require('../utils/env')

const getRC = () => {
  const adalorc = path.join(os.homedir(), '.adalorc')
  return adalorc
}

const authToken = (local) => {
  const adalorc = getRC()

  try {
    if (local) {
      const { localAuthToken } = JSON.parse(fs.readFileSync(adalorc))
      return localAuthToken
    } else {
      const { productionAuthToken } = JSON.parse(fs.readFileSync(adalorc))
      return productionAuthToken
    }
  } catch (err) {
    console.error('')
    console.error(chalk.bold.red('  You are currently NOT logged in to Adalo.'))
    console.error('  Please login to Adalo and try again:')
    console.error('')
    console.error(chalk.italic.green('    npx adalo login'))
    console.error('')
    console.error(
      chalk.bold(
        `  For further documentation please visit ${chalk.italic.blue(
          'https://developers.adalo.com'
        )}`
      )
    )
    console.error('')
    process.exit(1)
  }
}

const getUser = async (marketplaceURL) => {
  try {
    const url = `${marketplaceURL}/auth`
    const { data } = await axios.get(url)
    return data
  } catch (err) {
    console.error('')
    console.error('  Error Authenticating User:')

    if (err.response) {
      console.error(`  ${err.response.data}`)
    } else if (err.request) {
      console.error(`  ${err.request.data}`)
    } else {
      console.error(`  ${err}`)
    }

    process.exit()
  }
}

module.exports = {
  getRC,
  authToken,
  getUser,
}
