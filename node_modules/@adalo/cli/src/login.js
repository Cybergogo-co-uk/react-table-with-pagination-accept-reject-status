const inquirer = require('inquirer')
const fs = require('fs')
const path = require('path')
const os = require('os')
const chalk = require('chalk')
const axios = require('axios')

const server =
  process.env.ADALO_BACKEND_SERVER ||
  process.env.FOUNDRY_BACKEND_SERVER ||
  'https://adalo-backend.herokuapp.com'

const schema = [
  {
    type: 'text',
    name: 'email',
    message: 'Email',
  },
  {
    type: 'password',
    name: 'password',
    message: 'Password',
  },
]

const login = async (args, opts) => {
  let server = 'https://backend.adalo.com'

  if (opts.local) {
    server =
      process.env.ADALO_BACKEND_SERVER ||
      process.env.FOUNDRY_BACKEND_SERVER ||
      'http://localhost:8084'
  }

  const { email, password } = await inquirer.prompt(schema)

  try {
    const { data } = await axios.post(`${server}/sessions`, {
      email,
      password,
    })
    const { success, sessionToken } = data
    if (success) {
      const rc = path.join(os.homedir(), '.adalorc')

      if (opts.local) {
        let productionAuthToken
        if (fs.existsSync(rc)) {
          productionAuthToken = JSON.parse(
            fs.readFileSync(rc)
          ).productionAuthToken
        }
        if (!productionAuthToken) {
          productionAuthToken = ''
        }
        fs.writeFileSync(
          rc,
          JSON.stringify({
            productionAuthToken,
            localAuthToken: sessionToken,
          })
        )
      } else {
        let localAuthToken
        if (fs.existsSync(rc)) {
          localAuthToken = JSON.parse(fs.readFileSync(rc)).localAuthToken
        }
        if (!localAuthToken) {
          localAuthToken = ''
        }
        fs.writeFileSync(
          rc,
          JSON.stringify({
            localAuthToken,
            productionAuthToken: sessionToken,
          })
        )
      }

      console.log(`\n  Login successful!`.bold.green)
      console.log(
        `  Your login information was saved to`,
        `${rc}\n`.italic.bold.green
      )
    }
  } catch (error) {
    console.error('')
    console.error('  Login failed.'.bold.red)
    console.error('  Please try again.')
    console.error('')
    console.error(
      chalk.bold(
        `  For further documentation please visit ${chalk.italic.blue(
          'https://developers.adalo.com'
        )}`
      )
    )
    console.error('')
    process.exit(1)
  }
}

module.exports = login
